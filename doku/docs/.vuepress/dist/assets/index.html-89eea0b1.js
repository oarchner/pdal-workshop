import{_ as d,M as c,p as u,q as v,R as n,t as s,N as e,V as i,a1 as t}from"./framework-5f20ca33.js";const m={},b=t(`<h1 id="praxis" tabindex="-1"><a class="header-anchor" href="#praxis" aria-hidden="true">#</a> Praxis</h1><h2 id="starten-der-umgebung" tabindex="-1"><a class="header-anchor" href="#starten-der-umgebung" aria-hidden="true">#</a> Starten der Umgebung</h2><p>a. Starten der Kommandozeile durch Aufruf der Conda Console aus dem Startmenü<br> b. Aktivieren des pdal Environments</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate pdal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>c. Kontrolle ob PDAL Bibliothek gestartet werden kann</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Usage anzeigen</span>
pdal
<span class="token comment"># Version ausgeben</span>
pdal <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="anwendungen" tabindex="-1"><a class="header-anchor" href="#anwendungen" aria-hidden="true">#</a> Anwendungen</h2><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info" aria-hidden="true">#</a> Info</h3><p>a. Wechsel in das WS-Verzeichnis</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> c:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span><span class="token operator">&lt;</span>NAME<span class="token operator">&gt;</span><span class="token punctuation">\\</span>Documents<span class="token punctuation">\\</span>PDAL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>b. Hilfe zur Info Anwendung</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal info <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>c. Ausgabe des ersten Punktes</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal info sample.laz <span class="token parameter variable">-p</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>d. Ausgabe von Metainformationen</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal info sample.laz <span class="token parameter variable">--metadata</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> Merge</h3><p>a. Hilfe zur Merge Anwendung</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal merge <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>b. Vereinigen von mehreren Dateien zu einer Datei</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal merge las_a_2014.laz las_b_2014.laz merge2014.laz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="pipeline" tabindex="-1"><a class="header-anchor" href="#pipeline" aria-hidden="true">#</a> Pipeline</h3>`,22),h={href:"http://www.json.org",target:"_blank",rel:"noopener noreferrer"},k=t(`<p>a. Hilfe zur Pipeline Anwendung</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal pipeline <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>b. Kleinste mögliche Pipeline:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
<span class="token punctuation">[</span>
   <span class="token string">&quot;sample.laz&quot;</span><span class="token punctuation">,</span>
   <span class="token string">&quot;sample2.laz&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c. Filter Stages</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
   <span class="token string">&quot;input.laz&quot;</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span>
      <span class="token comment">// Stage A in Object Notation</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span>
      <span class="token comment">// Stage B in Objekt Notation </span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token string">&quot;output.laz&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>d. Alle vorhandenen Stages auflisten</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal <span class="token parameter variable">--drivers</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>e. Beispiel Pipeline zum Croppen eine LAS Datei</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token string">&quot;merge.laz&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;filters.crop&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;polygon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Polygon ((640007 5583845,640087 5583845,640087 5583934,640007 5583934, 640007 5583845))&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;crop.laz&quot;</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>f. Pipeline Start</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal pipeline pl_crop.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>g. Pipeline Start mit Überschreiben der Reader- und Writer-Stage</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal pipeline <span class="token parameter variable">--readers.las.filename</span><span class="token operator">=</span>merge.laz <span class="token parameter variable">--writers.las.filename</span><span class="token operator">=</span>crop.laz pl_crop.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="translate" tabindex="-1"><a class="header-anchor" href="#translate" aria-hidden="true">#</a> Translate</h3><p>a. Hilfe zur Translate Anwendung</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal translate <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>b. Dateiformatkonvertierung</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal translate sample.laz sample.las
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>c. Filteraufruf mit Argumenten</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Crop filter</span>
pdal translate merge.laz crop.laz crop <span class="token parameter variable">--filters.crop.polygon</span><span class="token operator">=</span><span class="token string">&quot;Polygon <span class="token variable"><span class="token punctuation">((</span><span class="token number">640007</span> <span class="token number">5583845</span><span class="token punctuation">,</span><span class="token number">640087</span> <span class="token number">5583845</span><span class="token punctuation">,</span><span class="token number">640087</span> <span class="token number">5583934</span><span class="token punctuation">,</span><span class="token number">640007</span> <span class="token number">5583934</span><span class="token punctuation">,</span> <span class="token number">640007</span> <span class="token number">5583845</span><span class="token punctuation">))</span></span>&quot;</span>

<span class="token comment"># LAS Writer mit Option zum Setzen des CRS</span>
pdal translate merge.laz merge_utm.laz <span class="token parameter variable">--writers.las.a_srs</span><span class="token operator">=</span><span class="token string">&quot;EPSG:25832&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c. Aufruf einer Pipeline-Datei mit Überschreiben von Ein- und Ausgabedatei</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pdal translate <span class="token parameter variable">--json</span> pl_crop.json merge.laz crop.laz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="stapelverarbeitung" tabindex="-1"><a class="header-anchor" href="#stapelverarbeitung" aria-hidden="true">#</a> Stapelverarbeitung</h2><p>Point Cloud Daten werden aufgrund ihrer Größe oft in mehrere kleine Dateien aufgeteilt. Skripts zur Stapelverarbeiung helfen uns unserer Arbeitsschritte zu automatisieren.</p>`,25),g=n("a",{href:"#translate"},"Translate-Anwendung",-1),f={href:"https://pdal.io/en/latest/stages/filters.reprojection.html",target:"_blank",rel:"noopener noreferrer"},_=n("div",{class:"language-ps1 line-numbers-mode","data-ext":"ps1"},[n("pre",{class:"language-ps1"},[n("code",null,`Get-ChildItem las_*.laz | foreach { pdal translate .\\$($_.BaseName).laz .\\$($_.BaseName)_ps.laz reprojection --filters.reprojection.in_srs="EPSG:25832" --filters.reprojection.out_srs="EPSG:3857" }
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/bin/bash"),s(`
`),n("span",{class:"token function"},"find"),s(),n("span",{class:"token builtin class-name"},"."),s(),n("span",{class:"token parameter variable"},"-name"),s(),n("span",{class:"token string"},"'las_*.laz'"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token builtin class-name"},"read"),s(),n("span",{class:"token function"},"file"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"do"),s(`    
    pdal translate `),n("span",{class:"token variable"},"$file"),s(" ./"),n("span",{class:"token variable"},[n("span",{class:"token variable"},"$("),n("span",{class:"token function"},"basename"),s(" $file .laz"),n("span",{class:"token variable"},")")]),s("_ps.laz reprojection "),n("span",{class:"token parameter variable"},"--filters.reprojection.in_srs"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"EPSG:25832"'),s(),n("span",{class:"token parameter variable"},"--filters.reprojection.out_srs"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"EPSG:3857"'),s(`
`),n("span",{class:"token keyword"},"done"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=t(`<p>Alternativ zur Verwendung der Kommandozeilenargumente lässt sich eine Pipeline auch aus einem Stapelverarbeitungs-Skript aufrufen. Die übergebenen Dateinamen überschreiben den Reader und Writer im Pipeline Skript:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token string">&quot;input.laz&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;filters.reprojection&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;out_srs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;EPSG:3857&quot;</span> <span class="token punctuation">,</span> <span class="token property">&quot;in_srs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;EPSG:25832&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;filters.crop&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;polygon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Polygon ((640007 5583845,640087 5583845,640087 5583934,640007 5583934, 640007 5583845))&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;output.laz&quot;</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x=n("div",{class:"language-ps1 line-numbers-mode","data-ext":"ps1"},[n("pre",{class:"language-ps1"},[n("code",null,`Get-ChildItem las_*.laz | foreach { pdal pipeline --readers.las.filename=.\\$($_.BaseName).laz 
--writers.las.filename=.\\$($_.BaseName)_c.laz pl_reproject_crop.json}
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/bin/bash"),s(`
`),n("span",{class:"token function"},"find"),s(),n("span",{class:"token builtin class-name"},"."),s(),n("span",{class:"token parameter variable"},"-name"),s(),n("span",{class:"token string"},"'las_*.laz'"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token builtin class-name"},"read"),s(),n("span",{class:"token function"},"file"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"do"),s(`
    `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},[s('"Processing '),n("span",{class:"token variable"},"$file"),s('"')]),s(`
    pdal pipeline `),n("span",{class:"token parameter variable"},"--readers.las.filename"),n("span",{class:"token operator"},"="),n("span",{class:"token variable"},"$file"),s(),n("span",{class:"token parameter variable"},"--writers.las.filename"),n("span",{class:"token operator"},"="),s("./"),n("span",{class:"token variable"},[n("span",{class:"token variable"},"$("),n("span",{class:"token function"},"basename"),s(" $file .laz"),n("span",{class:"token variable"},")")]),s(`_c.laz pl_reproject_crop.json    
`),n("span",{class:"token keyword"},"done"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h2",{id:"ausgewahlte-filterfunktionen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ausgewahlte-filterfunktionen","aria-hidden":"true"},"#"),s(" Ausgewählte Filterfunktionen")],-1),w={href:"https://pdal.io/en/latest/stages/filters.html",target:"_blank",rel:"noopener noreferrer"},S={id:"filters-expression",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#filters-expression","aria-hidden":"true"},"#",-1),P={href:"https://pdal.io/en/latest/stages/filters.expression.html",target:"_blank",rel:"noopener noreferrer"},D=t(`<p>Nur Punkte bei denen die Expression wahr ist, werden ausgegeben</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;filters.expression&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;expression&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(Z&gt;=10 &amp;&amp; Z&lt;50)&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),E={id:"filters-outlier",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#filters-outlier","aria-hidden":"true"},"#",-1),$={href:"https://pdal.io/en/latest/stages/filters.outlier.html",target:"_blank",rel:"noopener noreferrer"},B=t(`<p>Klassifizieren von Ausreißern mit Radius</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
     <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;filters.outlier&quot;</span><span class="token punctuation">,</span>
     <span class="token property">&quot;method&quot;</span><span class="token operator">:</span><span class="token string">&quot;radius&quot;</span><span class="token punctuation">,</span> <span class="token comment">// </span>
     <span class="token property">&quot;radius&quot;</span><span class="token operator">:</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token comment">// Distanz in Map Units</span>
     <span class="token property">&quot;min_k&quot;</span><span class="token operator">:</span><span class="token number">4</span> <span class="token comment">// Mindestanzahl von Nachbarn </span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Klassifizieren von Ausreißern über Standardabweichung</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>   <span class="token punctuation">{</span>
     <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;filters.outlier&quot;</span><span class="token punctuation">,</span>
     <span class="token property">&quot;method&quot;</span><span class="token operator">:</span><span class="token string">&quot;statistical&quot;</span><span class="token punctuation">,</span>
     <span class="token property">&quot;mean_k&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>  <span class="token comment">// Anzahl der Nachbarn </span>
     <span class="token property">&quot;multiplier&quot;</span><span class="token operator">:</span><span class="token number">2</span> <span class="token comment">// Grenzwert 2 * Standardabweichung</span>
   <span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),C={class:"hint-container note"},G=n("p",{class:"hint-container-title"},"Notiz",-1),V=n("br",null,null,-1),L={href:"https://pdal.io/en/latest/stages/filters.elm.html",target:"_blank",rel:"noopener noreferrer"},M={id:"filters-overlay",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#filters-overlay","aria-hidden":"true"},"#",-1),W={href:"https://pdal.io/en/latest/stages/filters.overlay.html",target:"_blank",rel:"noopener noreferrer"},F=t(`<p>Overlay aus einer JSON-Datei mit Zuweisung von Werten in einer Dimension.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code> <span class="token punctuation">{</span>
   <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;filters.overlay&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;datasource&quot;</span><span class="token operator">:</span><span class="token string">&quot;classification.geojson&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;layer&quot;</span><span class="token operator">:</span><span class="token string">&quot;classification&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;column&quot;</span><span class="token operator">:</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;dimension&quot;</span><span class="token operator">:</span><span class="token string">&quot;Classification&quot;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),K={id:"filters-colorization",tabindex:"-1"},H=n("a",{class:"header-anchor",href:"#filters-colorization","aria-hidden":"true"},"#",-1),I={href:"https://pdal.io/en/latest/stages/filters.colorization.html",target:"_blank",rel:"noopener noreferrer"},O=t(`<p>Zuweisen von Farbwerten aus einer Raster-Datei</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;filters.colorization&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;raster&quot;</span><span class="token operator">:</span><span class="token string">&quot;dop2010.tif&quot;</span><span class="token punctuation">,</span>      
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function T(U,Z){const a=c("ExternalLinkIcon"),p=c("Tabs");return u(),v("div",null,[b,n("p",null,[s("Pipelines erlauben es uns einen kompletten Workflow aus unterschiedlichen Stages aufzubauen. Sie werden im "),n("a",h,[s("JSON-Format"),e(a)]),s(" als ein Array definiert und bestehen immer aus einer Reader- und einer Writer-Stage. Die einzelnen Stages sind Elemente des Arrays und werden der Reihe nach aufgerufen.")]),k,n("p",null,[s("Das folgende Skript ruft die "),g,s(" für mehrere Dateien im Verzeichnis auf und führt einen "),n("a",f,[s("Reproject"),e(a)]),s(" durch:")]),e(p,{id:"109",data:[{title:"Powershell"},{title:"Bash"}]},{tab0:i(({title:l,value:r,isActive:o})=>[_]),tab1:i(({title:l,value:r,isActive:o})=>[q]),_:1}),z,e(p,{id:"121",data:[{title:"Powershell"},{title:"Bash"}]},{tab0:i(({title:l,value:r,isActive:o})=>[x]),tab1:i(({title:l,value:r,isActive:o})=>[y]),_:1}),j,n("p",null,[s("Eine gesamte Liste aller Filterfunktionen befindet sich auf der "),n("a",w,[s("PDAL Homepage"),e(a)]),s(".")]),n("h3",S,[A,s(),n("a",P,[s("filters.expression"),e(a)])]),D,n("h3",E,[N,s(),n("a",$,[s("filters.outlier"),e(a)])]),B,n("div",C,[G,n("p",null,[s("Eine weitere Möglichkeit zur Detektion und Klassifizierung von Punkten mit niedrigen Höhen ist die Anwendung des ELM Filters nach Chen."),V,n("a",L,[s("filters.elm"),e(a)])])]),n("h3",M,[R,s(),n("a",W,[s("filters.overlay"),e(a)])]),F,n("h3",K,[H,s(),n("a",I,[s("filters.colorization"),e(a)])]),O])}const Q=d(m,[["render",T],["__file","index.html.vue"]]);export{Q as default};
